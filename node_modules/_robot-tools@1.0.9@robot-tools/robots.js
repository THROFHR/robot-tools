/*
  *** 用法 ****
var robot = require('@/robots/robots.js');

//  
param = { dir, file, arguments  onMessage:(){}, menuOnly}

 
//强制停止机器人
robot.start(param); 
robot.showMenu();
robot.stop();
robot.exec(function(){...});

*/
var ROBOT = {};
(function() {
    // #ifndef APP-PLUS
    return;
    //#endif 
    var robot;
    robot = global.robot = uni.requireNativePlugin('Robot');
    robot.init(plus.runtime.appid, (msg) => {
        console.log("[init] -> " + msg);
        if (msg != 'fail') {
            return; //good
        }
        uni.showModal({
            title: '提示',
            content: 'App认证失败',
        });
    });
    ROBOT = {
        robot: robot,
        isready: false,
        permission: () => {},
        start: () => {},
        stop: () => {},
    };
})();; //
ROBOT.start = function(obj) {
    console.log(obj.arguments);
    // #ifndef APP-PLUS
    return; //非手机环境
    // #endif
    var _entry = obj.file;
    if (_entry.endsWith('.js')) {
        _entry = _entry.substr(0, _entry.length - 3);
    }
    obj.arguments._entry = _entry;
    var dir = 'static/robots/';
    if (!dir.startsWith('/')) { //非绝对路径，
        dir = plus.io.convertLocalFileSystemURL(dir);
    }
    this.robot.setJsDir(dir);
    this.robot.setJsFile('index.js');
    this.robot.setJsArguments(JSON.stringify(obj.arguments));
    this.robot.setJsCallback(function(data) {
        console.log(data);
        var js = JSON.parse(data);
        var error = js.error;
        if (error != undefined && error.indexOf('permission') > -1) {
            //---that.permission();
            js.status = "error"
            //data = JSON.stringify(js)
            return;
        }
        if (obj.onMessage != undefined) obj.onMessage(js)
    });
    this.robot.startMenu();
    if (obj.startAtMenu == true) {
        var nothing_; //not start
    } else {
        this.robot.start();
    }
    return this;
}
ROBOT.showMenu = function(obj) {
    obj.startAtMenu = true; //只显示菜单，不执行
    obj.arguments.startAtMenu = true;
    this.start(obj);
    uni.showToast({
        icon: 'none',
        title: '请从悬浮机器人处启动',
        duration: 2000
    });
}
ROBOT.exec = function(fun) {
    var code = fun.toString();
    if (typeof(fun) == 'function') {
        code = "(" + code + ")();"
    }
    code += "; var __f__=function(tag, msg, file){ console.log(msg)}";
    console.log(code);
    this.robot.exec(code);
}
ROBOT.permission = function() {
    console.log(" robot.permission: ");
    var b = this.robot.permission();
}
ROBOT.stop = function() {
    // #ifndef APP-PLUS
    return; //非手机环境
    //#endif
    if (this.robot == null) {
        return;
    }
    this.robot.stop();
}
String.prototype.replaceAll = function(s1, s2) {
    return this.replace(new RegExp(s1, "gm"), s2);
}
module.exports = ROBOT;